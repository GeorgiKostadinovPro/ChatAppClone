@using ChatAppClone.Core.Contracts
@using ChatAppClone.Data.Models;
@using ChatAppClone.Extensions;
@using Microsoft.AspNetCore.Identity;
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject INotificationService notificationService

@{
    var user = await UserManager.GetUserAsync(User);
    var profile = user?.ProfilePictureUrl ?? "https://www.shutterstock.com/image-vector/default-avatar-profile-icon-social-600nw-1677509740.jpg";

    var count = user == null ? 0 : await this.notificationService.GetNotificationsCountByUserId(user!.Id);
}

@if (!SignInManager.IsSignedIn(User))
{
    <li class="login">
        <a asp-area="Identity" asp-page="/Account/Login"><i class="fa-regular fa-user"></i> Sign in</a>
    </li>
}
else
{
    <li class="profile-nav-item">
        <a asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
            <img class="user-profile" src="@profile" alt="profile">
            <div class="notifications-tab">
                @count
            </div>
        </a>
    </li>
    <li>
        <form id="logoutForm" class="form-inline d-none" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
        </form>

        <a title="Logout" href="#" onclick="document.getElementById('logoutForm').submit();">
            <i class="fa-solid fa-arrow-right-from-bracket"></i>
        </a>
    </li>
}
